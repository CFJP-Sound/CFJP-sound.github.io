{"version":3,"sources":["nav-menu-constants.js","NavMenu.js","projects-constants.js","SingleItemView.js","Projects.js","discography-constants.js","Discography.js","about-constants.js","About.js","Main.js","main-constants.js","App.js","serviceWorker.js","index.js"],"names":["NAV_BAR","NavMenu","props","changePage","event","preventDefault","setState","selectedNavItem","currentTarget","innerText","itemClick","bind","menuItems","navMenuConstants","this","selectedPage","className","map","item","index","onClick","key","React","Component","SYMBOLS","PROJECTS","name","previewImg","description","works","externalLocation","type","title","SingleItemView","displayContent","singleItemToShow","src","frameborder","allow","allowfullscreen","alt","displayPayWhatYouWant","showPayWhatYouWant","href","target","Projects","showProjectPreview","state","projectToPreview","selectedProject","showProject","clearSelectedProject","undefined","hoverController","dispatchConfig","registrationName","projectsConstants","find","proj","innerHTML","changeProject","showSymbolFlakes","items","width","Math","floor","length","style","random","buttonWidth","buttonClass","onMouseEnter","onMouseLeave","DISCOGRAPHY_ITEMS","Discography","setSingleItem","discographyConstants","id","console","log","window","scrollTo","showSingleItem","clearSingleItem","ABOUT_CONTENT","About","aboutConstants","Main","components","pageToChangeTo","pageToShow","navBarOptions","ComponentName","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"oZAAaA,EAAU,CAAC,WAAY,cAAe,S,eCItCC,G,MAAb,kDACI,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAIVC,WAAa,SAACC,GACVA,EAAMC,iBACN,EAAKC,SAAS,CACVC,gBAAiBH,EAAMI,cAAcC,YAEzC,EAAKP,MAAMQ,UAAUN,EAAMI,cAAcC,YARzC,EAAKN,WAAa,EAAKA,WAAWQ,KAAhB,gBAFH,EADvB,qDAcc,IAAD,OACDC,EAAYC,EACZN,EAAkBO,KAAKZ,MAAMa,aACjC,OACI,yBAAKC,UAAU,WACX,oCACKJ,EAAUK,KAAI,SAACC,EAAMC,GAClB,IAAIH,EAAYE,IAASX,EAAkB,oBAAsB,WACjE,OACI,uBAAGS,UAAWA,EAAWI,QAAS,EAAKjB,WAAYkB,IAAKF,GAAQD,YAvB5F,GAA6BI,IAAMC,YCJtBC,EAAU,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAC9CC,EAAW,CACpB,CACIC,KAAM,iBACNC,WAAY,cACZC,YAAa,ksCACbC,MAAO,CACH,CACID,YAAa,qCACbE,iBAAkB,oFAClBC,KAAM,QACNC,MAAO,WAEX,CACIJ,YAAa,iEACbE,iBAAkB,oFAClBC,KAAM,QACNC,MAAO,kBAInB,CACIN,KAAM,WACNC,WAAY,+BACZC,YAAa,gqCACbC,MAAO,CACH,CACID,YAAa,8HACbE,iBAAkB,2CAClBC,KAAM,QACNC,MAAO,wBAEX,CACIJ,YAAa,2XACbE,iBAAkB,2CAClBC,KAAM,QACNC,MAAO,mBAEX,CACIJ,YAAa,myBACbE,iBAAkB,2CAClBC,KAAM,QACNC,MAAO,mCCvCVC,G,YAAb,kDACI,WAAY/B,GAAQ,IAAD,8BACf,cAAMA,IAGVgC,eAAiB,WACb,IAAIhB,EAAO,EAAKhB,MAAMiC,iBAEtB,MAAa,WADFjB,EAAKa,KAAOb,EAAKa,KAAO,OAEvB,4BAAQf,UAAU,gBAAgBoB,IAAKlB,EAAKY,iBAAkBO,YAAY,IAAIC,MAAM,0EAA0EC,iBAAe,IAE7K,yBAAKvB,UAAU,cAAcwB,IAAKtB,EAAKc,MAAOI,IAAKlB,EAAKS,cAVrD,EAcnBc,sBAAwB,WACpB,OAAI,EAAKvC,MAAMwC,mBAEP,2BAAG,uBAAGC,KAAM,EAAKzC,MAAMiC,iBAAiBL,iBAAkBc,OAAO,UAA9D,uBAGC,sCApBG,EADvB,qDA0BQ,OACI,oCACI,yBAAK5B,UAAU,oBACX,4BAAKF,KAAKZ,MAAMiC,iBAAiBH,OACjC,yBAAKhB,UAAU,mBACVF,KAAKoB,iBACN,6BACA,yBAAKlB,UAAU,8BACX,2BAAIF,KAAKZ,MAAMiC,iBAAiBP,cAEnCd,KAAK2B,0BAGd,wBAAIzB,UAAU,uBAvC9B,GAAoCM,IAAMC,YCE7BsB,EAAb,kDACI,WAAY3C,GAAQ,IAAD,8BACf,cAAMA,IAQV4C,mBAAqB,WACjB,OAAI,EAAKC,MAAMC,mBAAqB,EAAKD,MAAME,gBAEvC,yBAAKjC,UAAU,+BACX,yBAAKA,UAAU,mBACX,yBAAKwB,IAAK,EAAKO,MAAMC,iBAAiBtB,KAAMU,IAAK,EAAKW,MAAMC,iBAAiBrB,aAC7E,yBAAKX,UAAU,+BACX,2BACK,EAAK+B,MAAMC,iBAAiBpB,qBAMjD,GAvBW,EA2BnBsB,YAAc,WACV,OAAI,EAAKH,MAAME,gBAEP,yBAAKjC,UAAU,4BACX,uBAAGA,UAAU,sBAAsBI,QAAS,EAAK+B,sBAAjD,KACC,EAAKJ,MAAME,gBAAgBpB,MAAMZ,KAAI,SAACC,EAAMC,GACzC,OAAO,kBAAC,EAAD,CAAgBE,IAAKF,EAAOgB,iBAAkBjB,aAIjE,GArCW,EAyCnBiC,qBAAuB,SAAC/C,GACpBA,EAAMC,iBACN,EAAKC,SAAS,CACV2C,qBAAiBG,KA5CN,EAgDnBC,gBAAkB,SAACjD,GACfA,EAAMC,iBACwC,iBAA1CD,EAAMkD,eAAeC,iBACrB,EAAKjD,SAAS,CACV0C,iBAAkBQ,EAA2BC,MAAK,SAACC,GAAD,OAAUA,EAAKhC,OAAStB,EAAMI,cAAcmD,eAEjD,iBAA1CvD,EAAMkD,eAAeC,kBAC5B,EAAKjD,SAAS,CACV0C,sBAAkBI,KAxDX,EA6DnBQ,cAAgB,SAACxD,GACbA,EAAMC,iBACN,EAAKC,SAAS,CACV2C,gBAAiBO,EAA2BC,MAAK,SAACC,GAAD,OAAUA,EAAKhC,OAAStB,EAAMI,cAAcmD,gBAhElF,EAoEnBE,iBAAmB,WACf,IAAIC,EAAQN,EACRO,EAAQC,KAAKC,MAAM,IAAMH,EAAMI,QACnC,IAAK,EAAKnB,MAAMC,mBAAqB,EAAKD,MAAME,gBAC5C,OACI,yBAAKjC,UAAU,oBACV8C,EAAM7C,KAAI,SAACC,EAAMC,GACd,OACI,yBAAKgD,MAAO,CAAEJ,MAAOA,EAAQ,KAAO/C,UAAU,eAAeK,IAAKF,GAC9D,yBAAKH,UAAU,eACVwC,EAA0BQ,KAAKC,MAAOD,KAAKI,SAAWZ,EAA0BU,UAErF,yBAAKlD,UAAU,eACVwC,EAA0BQ,KAAKC,MAAOD,KAAKI,SAAWZ,EAA0BU,UAErF,yBAAKlD,UAAU,eACVwC,EAA0BQ,KAAKC,MAAOD,KAAKI,SAAWZ,EAA0BU,UAErF,yBAAKlD,UAAU,eACVwC,EAA0BQ,KAAKC,MAAOD,KAAKI,SAAWZ,EAA0BU,UAErF,yBAAKlD,UAAU,eACVwC,EAA0BQ,KAAKC,MAAOD,KAAKI,SAAWZ,EAA0BU,UAErF,yBAAKlD,UAAU,eACVwC,EAA0BQ,KAAKC,MAAOD,KAAKI,SAAWZ,EAA0BU,gBA3F7G,EAAKnB,MAAQ,CACTC,sBAAkBI,EAClBH,qBAAiBG,GAErB,EAAKQ,cAAgB,EAAKA,cAAcjD,KAAnB,gBANN,EADvB,qDAwGc,IAAD,OACDmD,EAAQN,EACRa,EAAcL,KAAKC,MAAM,IAAMH,EAAMI,QACzC,OACI,oCACKpD,KAAKoC,cACN,yBAAKlC,UAAU,4BACV8C,EAAM7C,KAAI,SAACC,EAAMC,GACd,IAAImD,EAAc,EAAKvB,MAAME,iBAAmB/B,EAAKQ,OAAS,EAAKqB,MAAME,gBAAgBvB,KAAO,0BAA4B,iBAC5H,OACI,4BAAQV,UAAWsD,EAAaH,MAAO,CAAEJ,MAAOM,EAAc,KAAOjD,QAAS,EAAKwC,cAAeW,aAAc,EAAKlB,gBAAiBmB,aAAc,EAAKnB,gBAAiBhC,IAAKF,GAAQD,EAAKQ,UAIvMZ,KAAK+C,mBACL/C,KAAKgC,0BAvHtB,GAA8BxB,IAAMC,WCLvBkD,EAAoB,CAC7B,CACI9C,WAAY,uBACZC,YAAa,0HACbE,iBAAkB,kDAClBE,MAAO,4BAEX,CACIL,WAAY,wBACZC,YAAa,iEACbE,iBAAkB,uDAClBE,MAAO,iCAEX,CACIL,WAAY,wBACZC,YAAa,iEACbE,iBAAkB,iEAClBE,MAAO,0CAEX,CACIL,WAAY,wBACZC,YAAa,0HACbE,iBAAkB,2DAClBE,MAAO,oCACR,CACCL,WAAY,wBACZC,YAAa,iEACbE,iBAAkB,sEAClBE,MAAO,iDCvBF0C,G,MAAb,kDACI,WAAYxE,GAAQ,IAAD,8BACf,cAAMA,IAOVyE,cAAgB,SAACvE,GACbA,EAAMC,iBACN,EAAKC,SAAS,CACV6B,iBAAkByC,EAAuCxE,EAAMI,cAAcqE,MAEjFC,QAAQC,IAAI,0BAA4B3E,EAAMI,cAAcqE,IAC5DG,OAAOC,SAAS,EAAG,IAdJ,EAiBnBC,eAAiB,WACb,OAAI,EAAKnC,MAAMZ,iBAEP,oCACI,uBAAGnB,UAAU,yBAAyBI,QAAS,EAAK+D,iBAApD,KACA,kBAAC,EAAD,CAAgBhD,iBAAkB,EAAKY,MAAMZ,iBAAkBgD,gBAAiB,EAAKA,gBAAiBzC,mBAAmB,UAIzH,sCA1BG,EA8BnByC,gBAAkB,SAAC/E,GACfA,EAAMC,iBACN,EAAKC,SAAS,CACV6B,sBAAkBiB,KA/BtB,EAAKL,MAAQ,CACTZ,sBAAkBiB,GAEtB,EAAKuB,cAAgB,EAAKA,cAAchE,KAAnB,gBALN,EADvB,qDAsCc,IAAD,OACDmD,EAAQc,EACZ,OACI,oCACI,yBAAK5D,UAAU,oBACVF,KAAKoE,kBAEV,yBAAKlE,UAAU,0BACV8C,EAAM7C,KAAI,SAACC,EAAMC,GACd,OACI,4BAAQE,IAAKF,EAAO0D,GAAI1D,EAAOC,QAAS,EAAKuD,eAAe,yBAAKnC,IAAKtB,EAAKc,MAAOI,IAAKlB,EAAKS,uBAhDxH,GAAiCL,IAAMC,YCL1B6D,EAAgB,CACzB,gtBACA,yYACA,gYACA,ueACA,kYCDSC,G,MAAb,kDACI,WAAYnF,GAAQ,uCACVA,GAFd,qDAMQ,OACI,yBAAKc,UAAU,2BACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,uBACX,yBAAKoB,IDNJ,wBCQL,yBAAKpB,UAAU,qBACVsE,EAA6BrE,KAAI,SAACC,GAAW,OAAQ,oCAAE,2BAAIA,cAbpF,GAA2BI,IAAMC,YCOpBgE,EAAb,kDASI,WAAYrF,GAAQ,IAAD,8BACf,cAAMA,IAPVsF,WAAa,CACT3C,SAAUA,EACV6B,YAAaA,EACbW,MAAOA,GAGQ,EAOnBlF,WAAa,SAACsF,GACV,EAAKnF,SAAS,CACVoF,WAAYD,IAEhBX,QAAQC,IAAR,8BAAmCU,EAAnC,OATA,EAAK1C,MAAQ,CACT2C,WAAYC,EAAsB,IAHvB,EATvB,qDAwBQ,IAAMC,EAAgB9E,KAAK0E,WAAW1E,KAAKiC,MAAM2C,YACjD,OACI,yBAAK1E,UAAU,QACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,CAASN,UAAWI,KAAKX,WAAYY,aAAcD,KAAKiC,MAAM2C,cAElE,yBAAK1E,UAAU,SAASoB,IC1CtB,qBD4CN,yBAAKpB,UAAU,uBACX,kBAAC4E,EAAD,YAlCpB,GAA0BtE,IAAMC,WECjBsE,MARf,WACE,OACE,yBAAK7E,UAAU,OACb,kBAAC,EAAD,QCKc8E,QACW,cAA7Bd,OAAOe,SAASC,UAEe,UAA7BhB,OAAOe,SAASC,UAEhBhB,OAAOe,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhC,QAAQgC,MAAMA,EAAMC,c","file":"static/js/main.aad19fba.chunk.js","sourcesContent":["export const NAV_BAR = [\"Projects\", \"Discography\", \"About\"]; // 3. Add new components here like: \"ComponentName\"","import React from 'react';\r\nimport * as navMenuConstants from './nav-menu-constants.js';\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.changePage = this.changePage.bind(this);\r\n    }\r\n\r\n    changePage = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            selectedNavItem: event.currentTarget.innerText\r\n        });\r\n        this.props.itemClick(event.currentTarget.innerText);\r\n    }\r\n\r\n    render() {\r\n        var menuItems = navMenuConstants.NAV_BAR;\r\n        var selectedNavItem = this.props.selectedPage;\r\n        return (\r\n            <div className=\"nav-bar\">\r\n                <>\r\n                    {menuItems.map((item, index) => {\r\n                        var className = item === selectedNavItem ? \"selected-nav-item\" : \"nav-item\";\r\n                        return (\r\n                            <a className={className} onClick={this.changePage} key={index}>{item}</a>\r\n                        );\r\n                    })}\r\n                </>\r\n            </div>\r\n        );\r\n    }\r\n}","export const SYMBOLS = [\"〄\", \"‡\", \"〤\", \"⌭\", \"⌮\", \"〆\", \"⌬\", \"༄\"];\r\nexport const PROJECTS = [\r\n    {\r\n        name: \"Leo's Delusion\",\r\n        previewImg: \"imgs/LD.jpg\",\r\n        description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris fermentum, risus elementum semper tincidunt, est massa interdum arcu, ut tristique sem mi ut leo. Vivamus libero tellus, rutrum euismod suscipit sed, molestie eget est. Integer finibus commodo cursus. Integer vel pellentesque ante. Sed quis aliquam sem. Fusce lobortis feugiat quam, non tempus ipsum pulvinar sit amet. Nunc vehicula sed felis quis aliquam. Nullam in suscipit justo, et sollicitudin justo. Integer vulputate convallis ipsum, eget finibus ligula posuere eu. Duis mollis maximus nibh, quis efficitur neque bibendum in. Duis et leo vitae ligula tristique condimentum. Vivamus consectetur nibh vehicula porta elementum. Integer convallis risus non condimentum pellentesque. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Suspendisse dui mauris, sagittis sed sodales ac, commodo eget velit. Donec finibus lectus ut dui lobortis semper. Suspendisse eu orci a ligula malesuada tempor ac a enim. Morbi et posuere velit, sed imperdiet diam. Vivamus ut felis tellus. Aenean tempor auctor lacinia. Nunc ut nunc gravida, accumsan augue ac, pellentesque dui. Click for completed works by this project.\",\r\n        works: [\r\n            {\r\n                description: \"The end comes to us all eventually\",\r\n                externalLocation: \"https://www.youtube.com/embed/videoseries?list=PL1Lgz0XMNSE0eBvGx-cHKNDxZoe9InZ7V\",\r\n                type: \"video\",\r\n                title: \"2 0 X X\"\r\n            },\r\n            {\r\n                description: \"Let us take you on a journey of gritty bass and ethereal beats\",\r\n                externalLocation: \"https://www.youtube.com/embed/videoseries?list=PL1Lgz0XMNSE3ZZAeXMTAd75JRIRQz7o5A\",\r\n                type: \"video\",\r\n                title: \"Chromaglyphs\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        name: \"Rescored\",\r\n        previewImg: \"imgs/RescoredLogoForSite.png\",\r\n        description: \"Donec convallis sed purus vitae auctor. Morbi et magna eget felis pretium fermentum. Mauris tempor dolor et odio lacinia, at volutpat lorem malesuada. Duis vehicula sodales ante. Proin tempor dictum felis, non efficitur dui suscipit in. Nullam sodales et lectus at viverra. In a velit gravida, blandit leo a, efficitur enim. Nullam porta lectus in auctor vehicula. Morbi a vestibulum nisi. Donec eu rutrum ipsum. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Fusce sit amet libero est. Nullam ut tempus ipsum. Fusce quis nunc at nisi mattis vestibulum in in eros. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nulla volutpat pellentesque facilisis. Curabitur eget massa vitae nulla euismod finibus. Proin ornare ac augue sit amet hendrerit. Nam pretium vitae enim et mollis. Suspendisse velit tellus, luctus eget lacus sit amet, varius suscipit dui. Vivamus vel molestie diam. Phasellus ac consequat quam, ut placerat erat. Fusce quis mi libero. Phasellus mattis dictum ipsum sit amet gravida. Fusce dignissim a ante non auctor. Nulla vitae consequat elit. Click for completed works by this project.\",\r\n        works: [\r\n            {\r\n                description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer in felis quam. Vivamus posuere ante vitae magna malesuada.\",\r\n                externalLocation: \"https://player.vimeo.com/video/446263688\",\r\n                type: \"video\",\r\n                title: \"Rescored: Flightplan\"\r\n            },\r\n            {\r\n                description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer in felis quam. Vivamus posuere ante vitae magna malesuada, aliquam blandit dolor semper. Vestibulum eget dolor felis. Proin aliquet lectus nec auctor auctor. Suspendisse suscipit turpis arcu, nec lobortis enim gravida lobortis. Aenean in mauris nec justo convallis laoreet. Phasellus fringilla luctus imperdiet.\",\r\n                externalLocation: \"https://player.vimeo.com/video/446336266\",\r\n                type: \"video\",\r\n                title: \"Rescored: Drive\"\r\n            },\r\n            {\r\n                description: \"Phasellus eget volutpat felis, a rhoncus quam. Sed tempus velit eros, ut sagittis metus tempus ut. Cras gravida ut sapien ut malesuada. Phasellus placerat laoreet arcu, nec porta massa tempor id. Nunc porta pellentesque placerat. Aliquam pellentesque velit metus, ac malesuada ex pulvinar eu. Donec sit amet risus eros. Sed a lectus molestie, bibendum ligula nec, aliquam augue. Nullam nec sapien erat. Quisque quis fringilla est. Quisque aliquam, eros nec molestie dictum, nisi risus laoreet turpis, sed blandit sapien urna sit amet justo. Donec malesuada enim a est convallis, eu fringilla risus lacinia. Nam placerat nulla eget ante commodo, in rutrum neque porta. Proin eget ante efficitur, ornare quam eget, pharetra nibh. Donec ac vestibulum eros. Maecenas fermentum ex eu nisl ornare molestie.\",\r\n                externalLocation: \"https://player.vimeo.com/video/446336431\",\r\n                type: \"video\",\r\n                title: \"Rescored: Sebastian's Voodoo\"\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n\r\n\r\n// Project  = {\r\n//     name: string \r\n//     items: array of json items\r\n//     description: string\r\n//     works: array of ProjectItems\r\n// }         \r\n\r\n// ProjectItem = {\r\n//     description: string\r\n//     externalLocation: string, url\r\n//     type: [video, img]\r\n//     title: string, required\r\n//   }","import React from 'react';\r\nimport './SingleItemView.css';\r\n\r\nexport class SingleItemView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    displayContent = () => {\r\n        var item = this.props.singleItemToShow;\r\n        var type = item.type ? item.type : 'img';\r\n        if (type === \"video\") {\r\n            return (<iframe className=\"display-video\" src={item.externalLocation} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>);\r\n        } else {\r\n            return (<img className=\"display-img\" alt={item.title} src={item.previewImg}></img>);\r\n        }\r\n    }\r\n\r\n    displayPayWhatYouWant = () => {\r\n        if (this.props.showPayWhatYouWant) {\r\n            return (\r\n                <p><a href={this.props.singleItemToShow.externalLocation} target=\"_blank\">Pay what you want!</a></p>\r\n            );\r\n        } else {\r\n            return (<></>);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className='single-item-view'>\r\n                    <h1>{this.props.singleItemToShow.title}</h1>\r\n                    <div className=\"content-display\">\r\n                        {this.displayContent()}\r\n                        <br />\r\n                        <div className=\"single-item-text-container\">\r\n                            <p>{this.props.singleItemToShow.description}</p>\r\n                        </div>\r\n                        {this.displayPayWhatYouWant()}\r\n                    </div>\r\n                </div>\r\n                <hr className=\"item-splitter\" />\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport * as projectsConstants from './projects-constants.js';\r\nimport './Projects.css';\r\nimport { SingleItemView } from './SingleItemView.js';\r\n\r\nexport class Projects extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projectToPreview: undefined,\r\n            selectedProject: undefined\r\n        };\r\n        this.changeProject = this.changeProject.bind(this);\r\n    }\r\n\r\n    showProjectPreview = () => {\r\n        if (this.state.projectToPreview && !this.state.selectedProject) {\r\n            return (\r\n                <div className=\"project-previews-containter\">\r\n                    <div className=\"project-preview\">\r\n                        <img alt={this.state.projectToPreview.name} src={this.state.projectToPreview.previewImg}></img>\r\n                        <div className=\"project-preview-p-container\">\r\n                            <p>\r\n                                {this.state.projectToPreview.description}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>);\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    showProject = () => {\r\n        if (this.state.selectedProject) {\r\n            return (\r\n                <div className=\"single-project-container\">\r\n                    <a className=\"projects-clear-item\" onClick={this.clearSelectedProject}>X</a>\r\n                    {this.state.selectedProject.works.map((item, index) => {\r\n                        return <SingleItemView key={index} singleItemToShow={item} />;\r\n                    })}\r\n                </div>);\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    clearSelectedProject = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            selectedProject: undefined\r\n        });\r\n    }\r\n\r\n    hoverController = (event) => {\r\n        event.preventDefault();\r\n        if (event.dispatchConfig.registrationName === \"onMouseEnter\") {\r\n            this.setState({\r\n                projectToPreview: projectsConstants.PROJECTS.find((proj) => proj.name === event.currentTarget.innerHTML)\r\n            });\r\n        } else if (event.dispatchConfig.registrationName === \"onMouseLeave\") {\r\n            this.setState({\r\n                projectToPreview: undefined\r\n            });\r\n        }\r\n    }\r\n\r\n    changeProject = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            selectedProject: projectsConstants.PROJECTS.find((proj) => proj.name === event.currentTarget.innerHTML)\r\n        });\r\n    }\r\n\r\n    showSymbolFlakes = () => {\r\n        var items = projectsConstants.PROJECTS;\r\n        var width = Math.floor(100 / items.length);\r\n        if (!this.state.projectToPreview && !this.state.selectedProject) {\r\n            return (\r\n                <div className=\"flakes-container\">\r\n                    {items.map((item, index) => {\r\n                        return (\r\n                            <div style={{ width: width + '%' }} className=\"symbolflakes\" key={index}>\r\n                                <div className=\"symbolflake\">\r\n                                    {projectsConstants.SYMBOLS[Math.floor((Math.random() * projectsConstants.SYMBOLS.length))]}\r\n                                </div>\r\n                                <div className=\"symbolflake\">\r\n                                    {projectsConstants.SYMBOLS[Math.floor((Math.random() * projectsConstants.SYMBOLS.length))]}\r\n                                </div>\r\n                                <div className=\"symbolflake\">\r\n                                    {projectsConstants.SYMBOLS[Math.floor((Math.random() * projectsConstants.SYMBOLS.length))]}\r\n                                </div>\r\n                                <div className=\"symbolflake\">\r\n                                    {projectsConstants.SYMBOLS[Math.floor((Math.random() * projectsConstants.SYMBOLS.length))]}\r\n                                </div>\r\n                                <div className=\"symbolflake\">\r\n                                    {projectsConstants.SYMBOLS[Math.floor((Math.random() * projectsConstants.SYMBOLS.length))]}\r\n                                </div>\r\n                                <div className=\"symbolflake\">\r\n                                    {projectsConstants.SYMBOLS[Math.floor((Math.random() * projectsConstants.SYMBOLS.length))]}\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var items = projectsConstants.PROJECTS;\r\n        var buttonWidth = Math.floor(100 / items.length);\r\n        return (\r\n            <>\r\n                {this.showProject()}\r\n                <div className=\"project-titles-container\">\r\n                    {items.map((item, index) => {\r\n                        var buttonClass = this.state.selectedProject && item.name === this.state.selectedProject.name ? \"selected-project-button\" : \"project-button\";\r\n                        return (\r\n                            <button className={buttonClass} style={{ width: buttonWidth + '%' }} onClick={this.changeProject} onMouseEnter={this.hoverController} onMouseLeave={this.hoverController} key={index}>{item.name}</button>\r\n                        );\r\n                    })}\r\n                </div>\r\n                {this.showSymbolFlakes()}\r\n                {this.showProjectPreview()}\r\n            </>\r\n        );\r\n    }\r\n}","export const DISCOGRAPHY_ITEMS = [\r\n    {\r\n        previewImg: \"imgs/TheEndComes.png\",\r\n        description: \"Vivamus nisi lorem, bibendum et diam nec, maximus dapibus nulla. Vestibulum hendrerit sem id tellus porttitor elementum\",\r\n        externalLocation: \"https://leosdelusion.bandcamp.com/album/2-0-x-x\",\r\n        title: \"2 0 X X - Leo's Delusion\"\r\n    },\r\n    {\r\n        previewImg: \"imgs/chromaglyphs.jpg\",\r\n        description: \"Let us take you on a journey of gritty bass and ethereal beats\",\r\n        externalLocation: \"https://leosdelusion.bandcamp.com/album/chromaglyphs\",\r\n        title: \"Chromaglyphs - Leo's Delusion\"\r\n    },\r\n    {\r\n        previewImg: \"imgs/Impressions3.png\",\r\n        description: \"Let us take you on a journey of gritty bass and ethereal beats\",\r\n        externalLocation: \"https://rescored.bandcamp.com/album/impressions-iii-flightplan\",\r\n        title: \"Impressions III: Flightplan - Rescored\"\r\n    },\r\n    {\r\n        previewImg: \"imgs/Impressions2.png\",\r\n        description: \"Vivamus nisi lorem, bibendum et diam nec, maximus dapibus nulla. Vestibulum hendrerit sem id tellus porttitor elementum\",\r\n        externalLocation: \"https://rescored.bandcamp.com/album/impressions-ii-drive\",\r\n        title: \"Impressions II: Drive - Rescored\"\r\n    }, {\r\n        previewImg: \"imgs/Impressions1.png\",\r\n        description: \"Let us take you on a journey of gritty bass and ethereal beats\",\r\n        externalLocation: \"https://rescored.bandcamp.com/album/impressions-i-sebastians-voodoo\",\r\n        title: \"Impressions I: Sebastian's Voodoo - Rescored\"\r\n    }];\r\n\r\n    // DiscographyItem = {\r\n    //     previewImg: string, url, required\r\n    //     description: string\r\n    //     externalLocation: string, url\r\n    //     title: string, required\r\n    //   }","import React from 'react';\r\nimport * as discographyConstants from './discography-constants';\r\nimport './Discography.css';\r\nimport { SingleItemView } from './SingleItemView.js';\r\n\r\nexport class Discography extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            singleItemToShow: undefined\r\n        };\r\n        this.setSingleItem = this.setSingleItem.bind(this);\r\n    }\r\n\r\n    setSingleItem = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            singleItemToShow: discographyConstants.DISCOGRAPHY_ITEMS[event.currentTarget.id]\r\n        });\r\n        console.log(\"SHOW SINGLE ITEM PAGE: \" + event.currentTarget.id);\r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\n    showSingleItem = () => {\r\n        if (this.state.singleItemToShow) {\r\n            return (\r\n                <>\r\n                    <a className=\"discography-clear-item\" onClick={this.clearSingleItem}>X</a>\r\n                    <SingleItemView singleItemToShow={this.state.singleItemToShow} clearSingleItem={this.clearSingleItem} showPayWhatYouWant=\"true\" />\r\n                </>\r\n            );\r\n        } else {\r\n            return (<></>);\r\n        }\r\n    }\r\n\r\n    clearSingleItem = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            singleItemToShow: undefined\r\n        });\r\n    }\r\n\r\n    render() {\r\n        var items = discographyConstants.DISCOGRAPHY_ITEMS;\r\n        return (\r\n            <>\r\n                <div className=\"single-item-view\">\r\n                    {this.showSingleItem()}\r\n                </div>\r\n                <div className='array-view-discography'>\r\n                    {items.map((item, index) => {\r\n                        return (\r\n                            <button key={index} id={index} onClick={this.setSingleItem}><img alt={item.title} src={item.previewImg}></img></button>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}","export const ABOUT_CONTENT = [\r\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ac sagittis augue. Nullam eu nunc ipsum. Praesent ac imperdiet lorem, quis volutpat elit. Nullam a facilisis diam. Fusce in laoreet elit. Praesent ut dignissim metus. Nullam non est vel urna rutrum volutpat. Etiam quis ex commodo, pellentesque metus eget, tincidunt mauris. Vivamus eu porta urna. Vestibulum convallis nulla odio, non rutrum ligula consequat non. Maecenas nec risus ornare, tempus metus eu, accumsan turpis. Praesent non eros quis quam porttitor laoreet non id nisi. Aenean ante metus, vulputate vitae egestas sed, dictum id tellus. Quisque luctus dolor velit, non elementum mi porttitor volutpat. Sed tempor ex rhoncus ex fringilla tempor.\",\r\n    \"Integer mollis faucibus velit nec aliquam. In hac habitasse platea dictumst. Nulla faucibus libero a auctor hendrerit. Morbi lacinia ligula at est suscipit, a feugiat urna bibendum. Integer ornare vehicula feugiat. Nulla facilisi. Vivamus sit amet risus tincidunt, malesuada velit vel, imperdiet augue. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae;\",\r\n    \"Proin tristique, lectus eu dignissim cursus, orci velit pretium nunc, eu placerat ipsum ex ut mi. Vivamus eu feugiat felis, ac tempus mi. Aliquam porta fermentum tincidunt. In at tincidunt arcu. Aliquam quis hendrerit enim, non fermentum dolor. Proin auctor interdum tellus, non convallis mauris ornare fringilla. Fusce orci nulla, feugiat quis imperdiet sed, volutpat vitae ipsum.\",\r\n    \"Sed non orci tortor. Praesent vehicula imperdiet enim, in luctus ligula blandit eget. Aenean imperdiet, dolor id suscipit fermentum, sapien purus venenatis quam, et varius massa nunc id diam. Nunc finibus egestas ante, commodo tempor lorem luctus vel. Nunc nunc lorem, imperdiet id risus et, fermentum pretium metus. Aenean suscipit maximus libero, ac porta enim molestie id. Nunc ut consectetur est, eget luctus risus. Praesent sem massa, luctus eget urna eu, laoreet vestibulum leo.\",\r\n    \"In molestie elit laoreet eros venenatis blandit. Suspendisse vel lectus at leo congue mollis id eget felis. Etiam elementum, ante ut pulvinar porttitor, nisi elit fermentum nulla, et sollicitudin eros magna ut turpis. Donec et erat ac nulla euismod efficitur. Integer vitae diam magna. Nunc nec turpis luctus, eleifend magna et, luctus magna. Nullam luctus libero ut feugiat rutrum.\"\r\n];\r\n\r\nexport const ABOUT_IMG = \"imgs/TheBoysBW.jpg\";\r\n\r\n\r\n\r\n// About content is an array of what you want to be paragraphs on the page. ","import React from 'react';\r\nimport * as aboutConstants from './about-constants.js';\r\nimport './About.css';\r\n\r\nexport class About extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='about-content-container'>\r\n                <div className=\"about-content\">\r\n                    <div className=\"about-img-container\">\r\n                        <img src={aboutConstants.ABOUT_IMG}></img>\r\n                    </div>\r\n                    <div className=\"about-p-container\">\r\n                        {aboutConstants.ABOUT_CONTENT.map((item) => { return (<><p>{item}</p></>); })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport * as mainConstants from './main-constants.js';\r\nimport * as navBarOptions from './nav-menu-constants.js';\r\nimport './Main.css';\r\nimport { NavMenu } from './NavMenu.js'\r\n\r\n// 1. Import new components here\r\nimport { Projects } from './Projects.js'\r\nimport { Discography } from './Discography.js'\r\nimport { About } from './About.js'\r\n\r\nexport class Main extends React.Component {\r\n\r\n    //2. Add new components here like: ComponentName: ComponentName\r\n    components = {\r\n        Projects: Projects,\r\n        Discography: Discography,\r\n        About: About\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pageToShow: navBarOptions.NAV_BAR[0]\r\n        };\r\n    }\r\n\r\n    changePage = (pageToChangeTo) => {\r\n        this.setState({\r\n            pageToShow: pageToChangeTo\r\n        });\r\n        console.log(`nav to (From Main): ${pageToChangeTo}!`);\r\n    }\r\n\r\n    render() {\r\n        const ComponentName = this.components[this.state.pageToShow];\r\n        return (\r\n            <div className='main'>\r\n                <div className='page-header'>\r\n                    <div className=\"app-header\">\r\n                        <NavMenu itemClick={this.changePage} selectedPage={this.state.pageToShow} />\r\n                    </div>\r\n                    <img className=\"banner\" src={mainConstants.BANNER}></img>\r\n                </div>\r\n                <div className=\"component-container\">\r\n                    <ComponentName />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","export const BANNER = \"imgs/banner.PNG\"","import React from 'react';\nimport './App.css';\nimport { Main } from './Main.js'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}